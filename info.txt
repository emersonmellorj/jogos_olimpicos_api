
##########################################
## Cache com Redis
## Controle de requisicoes (throthling)
## Autenticacao com Token
## Paginacao dos resultados
##########################################

http://localhost:8000/api/v1/stage/

http://localhost:8000/api/v1/modality/

    Ira retornar os dados da modalidade escolhida bem como os atletas desta modalidade + as etapas para esta
    modalidade.

    Para verificar / atualizar / excluir uma modalidade especifica:
    http://localhost:8000/api/v1/modality/3/

http://localhost:8000/api/v1/athletes/

http://localhost:8000/api/v1/modality/3/athletes/

http://localhost:8000/api/v1/results/

http://localhost:8000/api/v1/stage/2/ranking

- Somente será permitido cadastrar um resultado para um atleta se o mesmo pertencer à modalidade no qual 
esta sendo cadastrada. Caso contrário o usuario receberá uma mensagem de erro.

- Somente sera permitido cadastrar um resultado se a etapa ainda nao foi finalizada.

- Somente sera permitido cadastrar um resultado se a etapa escolhida estiver registrada para a competição escolhida.
Ex:
Modalidade: 100m rasos
Etapa: Lançamento de Dardo - Classificatoria 1

Isso não será permitido.

Modalidade: 100m rasos
Etapa: 100m rasos - Classificatoria 1

Isso será permitido.

- As regras para o numero de cadastro de resultados por Modalidade / Etapa e Atleta são:
    - Na competição de 100m Rasos, apenas será permitido o cadastro de um resultado por Modalidade / Etapa para cada
    atleta.

    - Na competição de Lançamento de Dardos, será permitido o cadastro de 3 resultados por Modalidade / Etapa
    para cada atleta.

    Fora isso, será retornada uma mensagem de erro informando ao usuário que não é mais possível cadastrar resultados
    para o atleta.


Para finalizar uma etapa da competição basta atualizar o atributo status = False. 
Se status = True a competição está ativa.


pytest -s -v tests.py 
