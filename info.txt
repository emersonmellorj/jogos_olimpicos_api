
##########################################
## Cache com Redis (OK)
## Controle de requisicoes (Throttling) (OK) 
## Autenticacao com Token (OK)
## Paginacao dos resultados (OK)
##########################################

http://localhost:8000/api/v1/stage/
http://localhost:8000/api/v1/stage/2/

http://localhost:8000/api/v1/modality/
http://localhost:8000/api/v1/modality/3/

    Ira retornar os dados da modalidade escolhida bem como os atletas desta modalidade + as etapas criadas para esta
    modalidade.

    Para verificar / atualizar / excluir uma modalidade especifica:
    http://localhost:8000/api/v1/modality/3/

http://localhost:8000/api/v1/athletes/
http://localhost:8000/api/v1/athletes/1/

http://localhost:8000/api/v1/modality/3/athletes/

http://localhost:8000/api/v1/results/
http://localhost:8000/api/v1/results/5/

http://localhost:8000/api/v1/stage/2/ranking/

- Somente será permitido cadastrar um resultado para um atleta se o mesmo pertencer à modalidade no qual 
esta sendo cadastrada. Caso contrário o usuario receberá uma mensagem de erro.

- Somente sera permitido cadastrar um resultado se a etapa ainda nao foi finalizada.

- Somente sera permitido cadastrar um resultado se a etapa escolhida estiver registrada para a competição escolhida.
Ex:
Modalidade: 100m rasos
Etapa: Lançamento de Dardo - Classificatoria 1

Isso não será permitido.

Modalidade: 100m rasos
Etapa: 100m rasos - Classificatoria 1

Isso será permitido.

- As regras para o numero de cadastro de resultados por Modalidade / Etapa e Atleta são:
    - Na competição de 100m Rasos, apenas será permitido o cadastro de um resultado por Modalidade / Etapa para cada
    atleta.

    - Na competição de Lançamento de Dardos, será permitido o cadastro de 3 resultados por Modalidade / Etapa
    para cada atleta.

    Fora isso, será retornada uma mensagem de erro informando ao usuário que não é mais possível cadastrar resultados
    para o atleta.

- Um usuário anônimo só terá direito a 10 requisições por minutos na API.
- O usuário que estiver autenticado terá direito a 10 requisições por segundo.

- Algumas viewsets foram configuradas para guardar o resultado no cache do Redis. 
Com isso, a resposta é muito mais rápida para requisições que foram feitas anteriormente.

- Para finalizar uma etapa da competição basta atualizar o atributo status = False. 
Se status = True a competição está ativa.

- A API esta configurada para paginar a cada 10 linhas retornadas.

pytest -s -v tests.py 

OBS: PARA IMPLANTAR PRECISO ALEM DO GUNICORN, DO REDIS INSTALADO NO SERVIDOR E EXECUTANDO

Token admin: a584711ab6d173e831f6927ad5d0baef297745b2

OBS: Devido ao cache no Redis das requisicoes que sao feitas na API, 
será preciso aguardar 1 minuto para validar as operaçoes via consultas na API. Se quiser ter a visualização 
em tempo real, favor consultar os objetos pelo Django Admin.

VERIFICAR SE EXISTE ALGUMA CONFIGURACAO EXTRA DE CACHE